name: "Continuous Build"

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
        include:
          - os: ubuntu-latest
            testAdditionalJavaVersions: true
            coverage: true
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - id: setup-java-8
        name: Setup Java 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
          java-package: jre
      - id: setup-java-11
        name: Setup Java 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: burrunan/gradle-cache-action@v1.10
        with:
          remote-build-cache-proxy-enabled: false
          arguments: build --stacktrace ${{ matrix.coverage && 'jacocoTestReport' || '' }}
          properties: |
            testAdditionalJavaVersions=${{ matrix.testAdditionalJavaVersions }}
            org.gradle.java.installations.paths=${{ steps.setup-java-8.outputs.path }},${{ steps.setup-java-11.outputs.path }}
      - uses: codecov/codecov-action@v1
        if: ${{ matrix.coverage }}
      - uses: actions/upload-artifact@v2
        if: ${{ matrix.coverage }}
        with:
          name: coverage-report
          path: all/build/reports/jacoco/test/html
  publish-snapshots:
    name: Publish snapshots to JFrog
    if: ${{ github.event_name == 'push' && github.repository == 'open-telemetry/opentelemetry-java' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - id: setup-java-11
        name: Setup Java 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: burrunan/gradle-cache-action@v1.10
        with:
          remote-build-cache-proxy-enabled: false
          arguments: artifactoryPublish
        env:
          BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
          BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}
